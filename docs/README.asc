= Alastria Identity
:author: Alastria
:revnumber: 0.1
:revdate: 03-10-2019
:numbered:
:imagesdir: docs/assets/img
:icons: font
:tip-caption: :bulb:
:note-caption: :information_source:
:important-caption: :heavy_exclamation_mark:
:caution-caption: :fire:
:warning-caption: :warning:
:toc:

(Version: {revnumber}, Version Date: {revdate})



== Introduction
(Lo que hay en WIKI HOME) Qué vamos a contar con referencia a la inspiración SSI W3C

* [ ] Jesús

=== Abstract

=== Objectives 
Sacar de EBSI
Problems to solve

* [ ] Carlos 

=== Estructura doc
Explicar cómo está estructurado este documento profundizando sobre los mismos puntos: modelo de datos, interacciones y trust frameworks a diferente nivel de detalle: modelo conceptual, especificacón técnica e implementación. Poner este indice.

* [ ] Maria

== Modelo conceptual

=== Asunciones 
(lo que está en el Rationale)

* [ ] Carlos
* [ ] Revisión Paula

==== Roles
(en la PPT y en Rationale)

CAUTION: HOY

* [ ] Carlos
* [ ] Revisión Paula

==== Modelo de datos

(en la PPT)

* [ ] Carlos
* [ ] Revisión Paula

==== Interacciones 
(Parrafos explicativos del principio de Alastria ID Workflows, se mencionan y PPT)

* [ ] Carlos
* [ ] Revisión Paula

==== Trust Frameworks

* [ ] Nacho
* [ ] Jesús

==== Consideraciones GDPR
Singularización, Vinculación e Inferencia (Sin detalle)

* [ ] Sara
* [ ] Revisión Paula

== Especificación técnica del modelo 
=== Especificación técnica de los objetos
==== Alastria Token (AT)

El Alastria Token deber seguir la estructura:
- Cabecera
- Contenido (Payload)
- Firma

El token es representado por una secuencia de las tres partes (cabecera, contenido y firma) codificadas en Base64url y separadas por ‘.’ (xxxxx.yyyyy.zzzzz)

CABECERA

Debe incluir:

- Tipo de token (“typ”: Type)
- Algoritmo de hashing (“alg”: Algorithm):

Ejemplo de cabecera:
{
"alg": "HS256",
"typ": "JWT"
}

La siguiente tabla muestra los diferentes algoritmos de hashing:

“alg” Algoritmo usado
HS256 HMAC using SHA-256 hash algorithm
HS384 HMAC using SHA-384 hash algorithm
HS512 HMAC using SHA-512 hash algorithm
RS256 RSASSA using SHA-256 hash algorithm
RS384 RSASSA using SHA-384 hash algorithm
RS512 RSASSA using SHA-512 hash algorithm
ES256 ECDSA using P-256 curve and SHA-256 hash algorithm
ES384 ECDSA using P-384 curve and SHA-384 hash algorithm
ES512 ECDSA using P-521 curve and SHA-512 hash algorithm
none No digital signature or MAC value included

CONTENIDO

El contenido debe incluir:
- Alastria ID del proveedor que envía el token (“iss”: Issuer).
- URL del gateway del proveedor (“gwu”: Gateway url).
- URL del callback a la que se debe responder con la dirección pública del usuario (“cbu”: Callback url).
- Identificador de la red Alastria ("ani": Alastria network id)
- Fecha de emisión (“iat”: Issue at).
- Fecha de caducidad (“exp”: Expiration time).

Opcionalmente se puede incluir:
- Fecha de activación del token (“nbf”: Not before)
- Identificador único de token (“jti”: JWT ID)

Ejemplo de contenido:
{
"jti ": "slfkjs-0923-...",
"iss": "0x...",
"gwu": "http://www.gateway_socio.com",
"cbu": "http://www.backend_service_provider.com/callback",
"ani": "1",
"iat ": 14344660338,
"exp" 1434663938,
"nbf ": 14344660338,
}

FIRMA
La firma debe generarse a partir de la cabecera y contenido, y usando el algoritmo especificado en la cabecera.

En el caso de algoritmo HMAC la firma se haría con un secreto compartido:

HMACSHA256(
base64UrlEncode(header) + "." +
base64UrlEncode(payload),
secret)

Y en el caso de RSA or ECDSA se firmaría con la clave privada del proveedor. Al firmar con la clave privada se puede comprobar que el proveedor que emite el token es quien dice ser. Ethereum usa el algoritmo SHA3-256 (RSASHA256) y es el algoritmo recomendado.

RSASHA256(
base64UrlEncode(header) + "." +
base64UrlEncode(payload),
RSA private key)

==== Alastria Identity Creation Object (AIC)

==== Alastria Session
El motodo devolvera un JSON con el siguiente formato:
headers:
{
"typ": "JWT",
"alg": "ES256k"
}

Payload:

{
"@context": "https://w3id.org/did/v1",
"iss": "did:ala:quor:telsius:0x123ABC",
"pku": "AE2309349218937HASKHIUE9287432",
"iat": 123123145,
"exp": 123131314,
"nbf ": 123123145,
"data": verifiedAlastriaToken
}

El contenido debe incluir:
- Alastria ID del proveedor que envía el token (“iss”: Issuer).
- La clave publica del usuario del wallet ("pku").
- El alastriaToken verificado que fue mandado previamente por el SP. ("Data")
- Fecha de emisión (“iat”: Issue at).
- Fecha de caducidad (“exp”: Expiration time).
Opcionalmente se puede incluir:
- Fecha de activación del token (“nbf”: Not before)
- Identificador único de token (“jti”: JWT ID)

Los inputs serán los siguientes:
- El DID del issuer que se almacenaria en el campo "iss".
- La clave publica del usuario del wallet ("pku").
- El alastriaToken verificado que fue mandado previamente por el SP. ("Data")
- (parametro opcional) Una medida en millis de cuanto tiempo sera valido el token. Este numero se sumara desde timestampo de "iat" para crear el "exp".
- (parametro opcional) Una medida en millis de en que momento comienza a ser valido el token que sera un timestamp que se copiará en el campo "nbf".


=== Especificación técnica del modelo de datos
Copiar intro y hacer referencia a Alastria DID Method Specification añadir Credential Request

* [ ] María

=== Especificación técnica de las interacciones 
Acciones que absorbe Alastria ID Workflows

CAUTION: HOY

* [ ] María

=== PSM Hashes 
(de la PPT y documento de estándar)

* [ ] Carlos

añadir consideraciones GDPR

* [ ] Sara
* [ ] Revisión Paula

=== Especificación técnica de los Trusts Frameworks

CAUTION: HOY

* [ ] Nacho
* [ ] Jesús
* [ ] Carlos

== Implementación de referencia
(PPT Carlos, dibujos DALION)

* [ ] Eduardo

=== Ethereum (Clientes EEA)

* [ ] Eduardo

==== Componenetes Software: smart contracts, librería, wallet 

* [ ] Eduardo
* [ ] María
* [ ] Revisor Iñigo

==== Implementación técnica en Ethereum del modelo de datos 

* [ ] Eduardo
* [ ] María
* [ ] Revisor Iñigo

==== Implementación técnica en Ethereum de las interacciones 

* [ ] Eduardo
* [ ] María
* [ ] Revisor Iñigo

==== Implementación técnica en Ethereum de los Trust Frameworks

_To be defined_

=== Hyperledger Fabric

* [ ] Jorge Ordovás

== Despliegues existentes (enlaces a esa info)

* [ ] Eduardo
* [ ] María

=== Red-T (Quorum) 
address smart contracts, scripts de creación de identidades, pruebas
(Copiar Readme antiguo de alastria-identity y referencias)

* [ ] María

=== Red-H

_To be defined_

* [ ] Jorge Ordovás

== How to collaborate

* [ ] Eduardo

=== Contact

* [ ] Eduardo

=== Alastria Improvement Proposal (AIP) 

* [ ] Jesus

=== Regular contributors

CORE team

* [ ] Eduardo
